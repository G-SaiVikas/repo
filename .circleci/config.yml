version: 2.1
orbs:
  node: circleci/node@5

jobs:
  test-node:
    executor: node/default
    working_directory: ~/project/rp_frontend/rp_portal
    steps:
      - checkout:
          path: ~/project
      - node/install-packages:
          pkg-manager: npm
      - run:
          name: Run tests
          command: npx jest --detectOpenHandles

  test-java:
    docker:
      - image: maven:3.8.4-openjdk-17
    working_directory: ~/project/rp_backend/RecruitmentPortal-StrawHats
    steps:
      - checkout:
          path: ~/project
      - run:
          name: Calculate cache key
          command: |-
            find . -name 'pom.xml' -o -name '*.maven*' | \
                    sort | xargs cat > /tmp/CIRCLECI_CACHE_KEY
      - restore_cache:
          key: cache-{{ checksum "/tmp/CIRCLECI_CACHE_KEY" }}
      - run:
          name: Run Maven verify
          command: mvn verify
      - store_test_results:
          path: target/surefire-reports
      - save_cache:
          key: cache-{{ checksum "/tmp/CIRCLECI_CACHE_KEY" }}
          paths:
            - ~/.m2/repository
      - store_artifacts:
          path: target/site

  build-and-push:
    docker:
      - image: cimg/openjdk:17.0
    steps:
      - checkout
      - setup_remote_docker:
          version: 20.10.7
      # Install Docker Compose
      # - run:
      #     name: Install Docker Compose
      #     command: |
      #       sudo -i 
      #       curl -L "https://github.com/docker/compose/releases/download/v2.27.1/docker-compose-$(uname -s)-$(uname -m)" -o /usr/local/bin/docker-compose
      #       chmod +x /usr/local/bin/docker-compose
      - run:
          name: Build the Java Jars
          command: |
            cd rp_backend/RecruitmentPortal-StrawHats && mvn clean package && cd ..
      - run:
          name: Test the Jar exists
          command: |
            ls rp_backend/RecruitmentPortal-StrawHats/target
      - run:
          name: Run the docker compose up command
          command: |
            docker-compose build
      - run:
          name: check the docker images
          command: |
            docker images
      - run:
          name: Authenticate with Docker Hub
          command: |
            echo "$DOCKERHUB_JTOKEN" | docker login --username $DOCKERHUB_JUSERNAME --password-stdin
      - run:
          name: Tag the docker containers with latest tag
          command: |
            docker tag project-frontend:latest jyothirmaikondepudi/recruitment_portal-frontend:${CIRCLE_SHA1}
            docker tag project-backend:latest jyothirmaikondepudi/recruitment_portal-backend:${CIRCLE_SHA1}
      - run:
          name: Push the docker containers to docker hub
          command: |
            docker push jyothirmaikondepudi/recruitment_portal-backend:${CIRCLE_SHA1}
            docker push jyothirmaikondepudi/recruitment_portal-frontend:${CIRCLE_SHA1}

workflows:
  build-and-test:
    jobs:
      - test-node
      - test-java
      - build-and-push:
          requires:
            - test-node
            - test-java
          filters:
            branches:
              only: main
